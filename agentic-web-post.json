{
  "id": 1327,
  "title": "Agentic Webを実現するためのA2A",
  "content": "<h2><strong>Agentic Webを実現するためのA2A</strong></h2>\n\n<p>従来の Web はブラウザが <strong>HTML + CSS + JavaScript</strong> を解釈して人間に向けて画面を生成しますが、近年、AIエージェントが人間とのインタフェースを担うようになると、Webブラウザを介さずに、AIエージェントがWebコンテンツを直接解釈して、ユーザのニーズにあわせて音声や画像で伝える世界が生まれようとしています。このトレンドをAgentic Webと呼んでいます。</p>\n\n<p>つまり、Agentic Web では人間が HTML を見る代わりに <strong>AI エージェント</strong> が直接 <strong>JSON</strong>（と静的アセット）だけを受け取り、音声・チャット・AR・VRなどユーザに最適な形に再レンダリングします。</p>\n\n<p>実は、このサイト自身もヘッドレスCMSと呼ばれる構造となっており、記事のコンテンツをHTMLではなく、AIエージェントが読みやすいJSONフォーマットで、 <a href=\"https://web.fujimura.com/posts.json\"><strong>https://web.fujimura.com/posts.json</strong></a> で配信しています。また、記事の更新もAIに手伝ってもらいやすいように、AI向けのマニュアルREADME.jsonも提供しています。</p>\n\n<p>これまではユーザとコンテンツ提供者の間にWebブラウザが存在していたわけですが、ユーザ側のAIエージェントとコンテンツ提供者側のAIエージェントがお互いにJSON形式のデータをやり取りして、ユーザに情報を提供するというわけです。</p>\n\n<img src=\"/images/A2A-json.jpeg\" alt=\"A2A Agent Communication\" style=\"max-width: 100%; height: auto; margin: 20px 0;\" />\n\n<p>この形態では、通知方法についても、よりリアルタイムにAIエージェントに通知できるのがメリットです。人間への通知では、お風呂や睡眠中では対応できませんが、AIエージェントが代行して対応してもらえるようになるでしょう。</p>\n\n<p>このようなAIエージェント同士の通信プロトコルについては、現在Linux FoundationがA2Aとよぶプロトコルの標準化を進めています。</p>\n\n<p>A2Aでは、<strong>Agent Card</strong>というAgentが提供する機能を表現する形式を仕様化し、さらに、SSE Stream, Webhook Push, Event Bus Bridgeとよぶ３つのチャンネルでA2A同士がリアルタイムで連携する通知の手段が検討されています。</p>\n\n<hr />\n\n<h2><strong>A2A標準化の最新動向</strong></h2>\n\n<table style=\"border-collapse: collapse; width: 100%; margin: 20px 0;\">\n<thead>\n<tr style=\"background-color: #f5f5f5;\">\n<th style=\"border: 1px solid #ddd; padding: 8px; text-align: left;\">日付</th>\n<th style=\"border: 1px solid #ddd; padding: 8px; text-align: left;\">進捗</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"border: 1px solid #ddd; padding: 8px;\"><strong>2025-03</strong></td>\n<td style=\"border: 1px solid #ddd; padding: 8px;\">Google が A2A を OSS 化し、Linux Foundation でホスト (<a href=\"https://www.linuxfoundation.org/press/linux-foundation-launches-the-agent2agent-protocol-project-to-enable-secure-intelligent-communication-between-ai-agents?utm_source=chatgpt.com\">linuxfoundation.org</a>, <a href=\"https://developers.googleblog.com/en/google-cloud-donates-a2a-to-linux-foundation/?utm_source=chatgpt.com\">Google Developers Blog</a>)</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid #ddd; padding: 8px;\"><strong>2025-06</strong></td>\n<td style=\"border: 1px solid #ddd; padding: 8px;\">A2A v1 β公開。SSE/Webhook/JSON-RPC 2.0 をコア仕様に明記 (<a href=\"https://www.linuxfoundation.org/press/linux-foundation-launches-the-agent2agent-protocol-project-to-enable-secure-intelligent-communication-between-ai-agents?utm_source=chatgpt.com\">linuxfoundation.org</a>)</td>\n</tr>\n<tr>\n<td style=\"border: 1px solid #ddd; padding: 8px;\"><strong>2025-Q4 予定</strong></td>\n<td style=\"border: 1px solid #ddd; padding: 8px;\">CloudEvents マッピング & gRPC streaming 拡張ドラフト提出</td>\n</tr>\n</tbody>\n</table>\n\n<p>A2A は \"運搬方式を固定しすぎない\" 方針で、<strong>ペイロードは基本 JSON</strong>、拡張で Protobuf／MsgPack も negotiable です。セキュリティ層は OAuth2／mTLS／DIDComm v2 を選択制。(<a href=\"https://www.googlecloudcommunity.com/gc/Community-Blogs/Understanding-A2A-The-Protocol-for-Agent-Collaboration/ba-p/906323?utm_source=chatgpt.com\">Google Cloud Community</a>)</p>\n\n<hr />\n\n<h2><strong>通知機能</strong></h2>\n\n<p>A2Aが規定しているリアルタイムの通信では、以下のようにコンテンツ提供者がユーザ側エージェントに対して以下のようなデータをイベントとして通知できる仕様が検討されています。</p>\n\n<h3><strong>コンテンツ提供者側エージェント</strong></h3>\n\n<pre><code>// CloudEvents 形式の change feed 例  \n{\n  &quot;specversion&quot;:&quot;1.0&quot;,\n  &quot;type&quot;:&quot;ai.a2a.content.created&quot;,\n  &quot;source&quot;:&quot;https://web.fujimura.com&quot;,\n  &quot;subject&quot;:&quot;posts/2025-07-15-agentic-web&quot;,\n  &quot;time&quot;:&quot;2025-07-15T09:00:00Z&quot;,\n  &quot;datacontenttype&quot;:&quot;application/json&quot;,\n  &quot;data&quot;:{\n    &quot;url&quot;:&quot;/posts/2025-07-15-agentic-web&quot;,\n    &quot;revision&quot;:1\n  }\n}</code></pre>\n\n<ol>\n<li><strong>posts.json</strong> の一覧エンドポイントに加えて <code>/events</code> を用意し、CloudEvents を SSE／Webhook で配信。</li>\n<li>必要に応じてJSON Web Token(JWT)  or mTLS で正当な購読者を検証。</li>\n<li>HTML の生成は省き、フロントが必要なら静的生成ツールで後段対応。</li>\n</ol>\n\n<h3><strong>ユーザ側エージェント</strong></h3>\n\n<p><strong>Capabilities 宣言</strong></p>\n\n<pre><code>{ &quot;capabilities&quot;:{ &quot;streaming&quot;:true,&quot;pushNotifications&quot;:true } }</code></pre>\n\n<ul>\n<li>通知を受けたら <code>GET /posts/{slug}.json</code> で本文を Pull → 人間向けチャット or 音声 TTS に変換。</li>\n<li>キャッシュ整合を保つため <code>ETag</code>／<code>Last-Modified</code> を利用する。</li>\n</ul>\n\n<hr />\n\n<h2><strong>まとめ</strong></h2>\n\n<ul>\n<li><strong>HTML 主体の Web</strong> から <strong>JSON 主体の Agentic Web</strong> へ移行が始まった。</li>\n<li>A2A プロトコルは通知メカニズムとして <em>SSE</em>・<em>Webhook</em>・<em>CloudEvents</em> を定義しオープン標準化が進行中。</li>\n<li>本記事も <code>posts.json</code> で既に配信中。エージェントから直接購読すればブラウザ不要で読める。</li>\n<li>今から <strong>構造化 API・通知エンドポイント・セキュア証明</strong> を整えておくことで、次世代 Web へのスムーズな橋渡しができる。</li>\n</ul>\n\n<p>未来のユーザー体験は「どの画面で見るか」ではなく「<strong>どのエージェントがどう見せてくれるか</strong>」で決まります。開発者は JSON と通知チャネルを整え、エージェントが活用しやすい情報を提供しましょう。これはSEO (Search Engine Optimization)からAAO (AI Agent Optimization)へのシフトと呼べるものですね。</p>",
  "excerpt": "従来のWebからAgentic Webへの移行とA2Aプロトコルについて解説。AIエージェント同士がJSON形式で直接やり取りし、ユーザに最適な形で情報を提供する新しいWeb体験について。",
  "date": "2025-07-20T00:58:18.496Z",
  "modified": "2025-07-20T00:58:18.496Z",
  "slug": "post-1327",
  "status": "publish",
  "author": "fujimura",
  "categories": [
    "Technology",
    "AI"
  ],
  "tags": [
    "A2A",
    "Agentic Web",
    "AI Agent",
    "JSON",
    "Protocol"
  ],
  "featuredImageUrl": "/images/A2A-json.jpeg"
}